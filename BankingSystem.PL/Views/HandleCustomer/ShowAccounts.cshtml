@using BankingSystem.DAL.Models
@model IEnumerable<Account>

@{
    ViewData["Title"] = "Accounts Management";
}


<style>
    :root {
        --primary-dark: rgb(63, 114, 175); /* new primary dark */
        --primary-medium: rgb(157, 178, 191); /* new primary medium */
        --primary-light: rgb(219, 226, 239); /* new primary light */
        --secondary-dark: rgb(63, 114, 175); /* mapped to primary-dark because no exact secondary */
        --secondary-light: rgb(219, 226, 239); /* mapped to primary-light */
        --neutral-1: rgb(157, 178, 191); /* mapped to text-light */
        --accent-1: rgb(63, 114, 175); /* mapped to primary-dark */
        --accent-2: rgb(221, 230, 237); /* primary-lightest */
        --accent-3: rgb(238, 244, 255); /* soft background you used */
        --white: #ffffff; /* stays same */
    }

    .accounts-container {
        background: var(--accent-3);
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        padding: 2rem;
    }

    .accounts-header {
        color: var(--primary-dark);
        border-bottom: 2px solid var(--accent-1);
        padding-bottom: 1rem;
        margin-bottom: 2rem;
    }

    .account-card {
        border-radius: 12px;
        overflow: hidden;
        background: var(--white);
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        transition: transform 0.2s;
    }

    .account-card:hover {
        transform: scale(1.01);
    }

    .account-card.closed {
        background-color: var(--accent-2);
        border: 2px solid var(--accent-1);
    }

    .card-title {
        color: var(--primary-dark);
    }

    .account-meta span {
        color: var(--primary-medium);
    }

    .action-buttons .btn {
        border-radius: 6px;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .action-buttons .btn:hover {
        opacity: 0.9;
    }

    .btn-outline-primary {
        border-color: var(--primary-medium);
        color: var(--primary-medium);
    }

    .btn-outline-primary:hover {
        background-color: var(--primary-medium);
        color: var(--white);
    }

    .btn-outline-warning {
        border-color: #ffc107;
        color: #ffc107;
    }

    .btn-outline-warning:hover {
        background-color: #ffc107;
        color: 
    }

    .btn-outline-danger {
        border-color: #dc3545;
        color: #dc3545;
    }

    .btn-outline-danger:hover {
        background-color: #dc3545;
        color: var(--white);
    }

    .account-card {
        border-radius: 1rem;
        transition: all 0.3s ease;
    }

    .hover-shadow-lg {
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

        .hover-shadow-lg:hover {
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
            transform: translateY(-2px);
        }

    .bg-gradient-primary {
        background: linear-gradient(135deg, rgba(99, 102, 241, 0.1) 0%, rgba(168, 85, 247, 0.1) 100%);
    }

    .avatar-icon {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .btn-icon {
        width: 38px;
        height: 38px;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0;
    }

    .btn-hover-primary:hover {
        color: #4f46e5 !important;
        border-color: #4f46e5 !important;
    }

    .btn-hover-warning:hover {
        color: #f59e0b !important;
        border-color: #f59e0b !important;
    }

    .btn-hover-danger:hover {
        color: #ef4444 !important;
        border-color: #ef4444 !important;
    }

    .closed {
        opacity: 0.7;
        position: relative;
        overflow: hidden;
    }

        .closed::after {
            content: "CLOSED";
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) rotate(-45deg);
            font-size: 2rem;
            font-weight: 800;
            color: rgba(239, 68, 68, 0.3);
            z-index: 1;
        }
</style>


<div class="container-fluid py-4">
    <div class="row justify-content-center">
        <div class="col-xxl-10 col-12">
            <div class="accounts-container">
                <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4">
                    <div>
                        <h1 class="accounts-header">
                            <i class="fas fa-building-columns me-2"></i> Accounts Management
                        </h1>
                        <p class="text-muted mb-0">View, update, and manage customer accounts</p>
                    </div>
                    <a asp-controller="HandleAccount" asp-action="Create" asp-route-customerId="@Context.Request.RouteValues["id"]" class="btn btn-outline-primary mt-3 mt-md-0">
                        <i class="fas fa-plus-circle me-1"></i> Create New Account
                    </a>
                </div>

                <div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4">
                    @foreach (var item in Model)
                    {
                        <div class="col w-50">
                            <div class="card account-card h-100 border-0 shadow-sm hover-shadow-lg transition-all @(item.AccountStatus == AccountStatus.Closed ? "closed" : "")">
                                <!-- Card Header -->
                                <div class="card-header bg-gradient-primary bg-opacity-10 border-bottom-0 pt-4 pb-3">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="d-flex align-items-center gap-2">
                                            <div class="icon-wrapper bg-primary bg-opacity-10 p-3 rounded-circle">
                                                <i class="@GetAccountIcon(item.AccountType) fs-4 text-primary"></i>
                                            </div>
                                            <div>
                                                <h5 class="mb-0 fw-bold text-dark">@item.Number</h5>
                                                <small class="text-muted">@item.AccountType.ToString()</small>
                                            </div>
                                        </div>
                                        <span class="badge rounded-pill bg-@GetStatusColor(item.AccountStatus) bg-opacity-25 text-@GetStatusColor(item.AccountStatus) py-2 px-3">
                                            @item.AccountStatus
                                        </span>
                                    </div>
                                </div>

                                <!-- Card Body -->
                                <div class="card-body pt-0">
                                    <div class="d-flex flex-column gap-3">
                                        <!-- Balance Highlight -->
                                        <div class="bg-light rounded-3 p-3 text-center">
                                            <span class="text-muted small">Available Balance</span>
                                            <h2 class="mb-0 text-success fw-bold">@item.Balance.ToString()</h2>
                                        </div>

                                        <!-- Account Metadata -->
                                        <div class="row g-2">
                                            <div class="col-6">
                                                <div class="d-flex align-items-center gap-2 text-muted">
                                                    <i class="fas fa-calendar-alt fa-sm"></i>
                                                    <span>Opened</span>
                                                </div>
                                                <div class="fw-medium">@item.CreatedAt.ToString("dd MMM yyyy")</div>
                                            </div>
                                            <div class="col-6">
                                                <div class="d-flex align-items-center gap-2 text-muted">
                                                    <i class="fas fa-university fa-sm"></i>
                                                    <span>Branch</span>
                                                </div>
                                                <div class="fw-medium">@item?.Branch?.Name</div>
                                            </div>
                                        </div>

                                        <!-- Customer Info -->
                                        <div class="border-top pt-3">
                                            <div class="d-flex align-items-center gap-3">
                                                <div class="avatar-icon bg-primary bg-opacity-10 text-primary rounded-circle p-2">
                                                    <i class="fas fa-user fa-lg"></i>
                                                </div>
                                                <div>
                                                    <div class="fw-medium">@item?.Customer?.FirstName @item?.Customer?.LastName</div>
                                                    <small class="text-muted">CID: @item?.CustomerId</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Card Footer -->
                                <div class="card-footer bg-transparent border-top-0 pt-0 pb-4">
                                    <div class="d-flex justify-content-end gap-2">
                                        <a asp-controller="HandleAccount" asp-action="Details" asp-route-id="@item?.Id" class="btn btn-outline-primary btn-sm" title="View">
                                            <i class="fas fa-eye"></i>
                                        </a>

                                        <a asp-controller="HandleAccount" asp-action="Edit" asp-route-id="@item?.Id"
                                           asp-route-returnUrl="@Context.Request.Path" class="btn btn-outline-warning btn-sm @(item?.AccountStatus == AccountStatus.Closed ? "disabled" : "")" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>

                                        <form asp-controller="HandleAccount" asp-action="Delete" asp-route-id="@item?.Id" onsubmit="return confirmDelete()" class="d-inline">
                                            <input type="hidden" name="returnUrl" value="@Url.Action("ShowAccounts", "HandleCustomer", new { id = @Context.Request.RouteValues["id"] })" />
                                            <button type="submit" class="btn btn-outline-danger btn-sm" title="Delete">
                                                <i class="fas fa-trash-alt"></i>
                                            </button>
                                        </form>

                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <a asp-action="GetAllCustomers" class="btn btn-outline-secondary px-5 mt-4">
                    <i class="fas fa-arrow-left me-2"></i>Back
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete() {
            return confirm('Are you sure you want to delete this account? This action cannot be undone.');
        }
    </script>
}

@functions {
    public string GetAccountIcon(AccountType type)
    {
        return type switch
        {
            AccountType.Saving => "fas fa-building-columns",
            AccountType.Current => "fas fa-money-bill-wave",
            _ => "fas fa-wallet"
        };
    }

    public string GetStatusColor(AccountStatus status)
    {
        return status switch
        {
            AccountStatus.Active => "success",
            AccountStatus.Inactive => "warning",
            AccountStatus.Closed => "danger",
            _ => "secondary"
        };
    }
}
