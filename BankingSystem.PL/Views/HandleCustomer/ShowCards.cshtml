@using BankingSystem.DAL.Models
@model IEnumerable<VisaCard>

@{
    ViewData["Title"] = "Visa Cards Management";
}

<style>
    :root {
        --primary-dark: #004890; /* new primary dark */
        --primary-medium: #7885FF; /* new primary medium */
        --primary-light: rgb(219, 226, 239); /* new primary light */
        --secondary-dark: #004890; /* mapped to primary-dark because no exact secondary */
        --secondary-light: rgb(219, 226, 239); /* mapped to primary-light */
        --neutral-1: #7885FF; /* mapped to text-light */
        --accent-1: #004890; /* mapped to primary-dark */
        --accent-2: rgb(221, 230, 237); /* primary-lightest */
        --accent-3: #E9FAEB; /* soft background you used */
        --white: #ffffff; /* stays same */
        /* --btn: #0466c8; */
        /* --btn2: #0353a4; */
        /* --btn-m: #8E99FF; */
        --btn: #FF9B10;
        --btn-m: #ffbf69;
        --header: #000000;
    }

  


    .card-grid {
        background: var(--accent-3);
        border-radius: 15px;
        padding: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .card-custname {
        top: 65%;
    }

    .card {
        border: none;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.05);
    }

    .card-header {
        background: var(--accent-2) !important;
        color: var(--header);
        font-weight: bold;
    }

    .summary-header {
        border-bottom: 2px solid var(--accent-1);
        padding-bottom: 1rem;
        margin-bottom: 2rem;
        color: var(--header);
    }

    .text-primary {
        color: var(--primary-dark) !important;
    }

    .bg-credit {
        background: linear-gradient(90deg, var(--primary-dark), var(--primary-medium)) !important;
    }

    .bg-debit {
        background-color: var(--secondary-dark) !important;
    }
</style>

<div class="container card-grid my-5">
    <!-- Page Header -->
    <div class="mb-4 summary-header">
        <h3 class="fw-semibold">
            <i class="bi bi-credit-card-fill me-2"></i>Visa Cards Management
        </h3>
        <p class="text-muted">View, update, and manage customer cards</p>
    </div>

    <!-- Cards Summary -->
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h4 class="mb-0">Cards Summary</h4>
        </div>
        <div class="card-body">
            <div class="row text-center">
                <div class="col-md-4 mb-3">
                    <div class="h1 text-primary mb-2">@Model.Count()</div>
                    <div class="text-muted fw-bold">Total Cards</div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="h1 text-primary mb-2">@Model.Count(c => c.CardType == TypeOfCard.Credit)</div>
                    <div class="text-muted fw-bold">Credit Cards</div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="h1 text-primary mb-2">@Model.Count(c => c.CardType == TypeOfCard.Debit)</div>
                    <div class="text-muted fw-bold">Debit Cards</div>
                </div>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="card">
            <div class="card-body text-center">
                <i class="bi bi-info-circle-fill text-warning fs-3 mb-2"></i>
                <h5 class="text-muted">No visa cards found in the system.</h5>
            </div>
        </div>
    }
    else
    {
        @foreach (var card in Model)
        {
            var isCredit = card.CardType == BankingSystem.DAL.Models.TypeOfCard.Credit;
            var cardClass = isCredit ? "bg-primary" : "bg-success";
            var gradient = isCredit ? "bg-gradient" : "bg-gradient";
            var last4 = card.Number?.Length >= 4 ? card.Number[^4..] : "****";

            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">@card.CardType.ToString() Card</h4>
                    <span class="badge rounded-pill bg-@GetStatusColor(card.Account!.AccountStatus)">
                        @card.Account.AccountStatus
                    </span>
                </div>
                <div class="card-body mt-2">
                    <div class="row g-4">
                        <div class="col-lg-5 ms-2">
                            <div class="position-relative rounded text-white p-4 shadow @cardClass @gradient" style="height: 250px;">
                                <div class="position-absolute top-0 start-0 m-3 bg-white bg-opacity-25 rounded p-2">
                                    <i class="bi bi-credit-card-fill fs-4"></i>
                                </div>
                                <div class="position-absolute top-0 end-0 m-3 fs-5 fw-bold">SecureBank</div>
                                <div class="position-absolute top-50 start-0 ms-3 translate-middle-y fs-5">
                                    **** **** **** @last4
                                </div>

                                <div class="card-custname position-absolute start-0 ms-3 translate-middle-y fs-5">
                                    @card.Account?.Customer?.FirstName @card.Account?.Customer?.LastName
                                </div>

                                <div class="position-absolute bottom-0 start-0 end-0 d-flex justify-content-between px-3 pb-3">
                                    <div class="text-white text-uppercase small">Exp: @card.ExpDate.ToString("MM/yy")</div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 ms-5 text-center">
                            <h5 class="mb-3">Card Details</h5>

                            <div class="mb-2 d-flex justify-content-between border-bottom pb-2">
                                <span class="text-muted">Card Type</span>
                                <span class="fw-semibold">@card.CardType</span>
                            </div>

                            <div class="mb-2 d-flex justify-content-between border-bottom pb-2">
                                <span class="text-muted">Card Number</span>
                                <span class="fw-semibold">**** **** **** @last4</span>
                            </div>

                            <div class="mb-2 d-flex justify-content-between border-bottom pb-2">
                                <span class="text-muted">CVV</span>
                                <span class="fw-semibold">***</span>
                            </div>

                            <div class="mb-2 d-flex justify-content-between border-bottom pb-2">
                                <span class="text-muted">Account No.</span>
                                <span class="fw-semibold">@card.Account?.Number</span>
                            </div>

                            <div class="mb-2 d-flex justify-content-between border-bottom pb-2">
                                <span class="text-muted">Created On</span>
                                <span class="fw-semibold">@card.CreationDate.ToShortDateString()</span>
                            </div>

                            <form asp-action="Delete" asp-controller="HandleCard" asp-route-id="@card.Id">
                                <input type="hidden" name="returnUrl" value="@Url.Action("ShowCards", "HandleCustomer", new { id = @Context.Request.RouteValues["id"] })" />
                                <button onclick="return confirmDelete()" class="mt-2 btn btn-danger border border-danger text-white hover-effect">
                                    <i class="fas fa-trash me-1"></i>Delete
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    }

    <a href="javascript:history.back()" class="btn btn-outline-secondary w-25 mt-3">
        <i class="fas fa-arrow-left me-2"></i>Back
    </a>

</div>

@functions {
    public string GetStatusColor(AccountStatus status)
    {
        return status switch
        {
            AccountStatus.Active => "success",
            AccountStatus.Inactive => "warning",
            AccountStatus.Closed => "danger",
            _ => "secondary"
        };
    }
}

@section Scripts {
    <script>
        function confirmDelete() {
            return confirm('Are you sure you want to delete this card? This action cannot be undone.');
        }
    </script>
}

