@using BankingSystem.DAL.Models
@model BankingSystem.PL.ViewModels.Customer.ReservationViewModel

@{
    ViewData["Title"] = "Create Reservation";
}
<link rel="stylesheet" href="/css/CustomerHome.css" />

<style>
    :root {
        --primary-dark: #004890; /* new primary dark */
        --primary-medium: #7885FF; /* new primary medium */
        --primary-light: rgb(219, 226, 239); /* new primary light */
        --secondary-dark: #004890; /* mapped to primary-dark because no exact secondary */
        --secondary-light: rgb(219, 226, 239); /* mapped to primary-light */
        --neutral-1: #7885FF; /* mapped to text-light */
        --accent-1: #004890; /* mapped to primary-dark */
        --accent-2: rgb(221, 230, 237); /* primary-lightest */
        --accent-3: #E9FAEB; /* soft background you used */
        --white: #ffffff; /* stays same */
        /* --btn: #0466c8; */
        /* --btn2: #0353a4; */
        /* --btn-m: #8E99FF; */
        --btn: #FF9B10;
        --btn-m: #ffbf69;
        --header: #000000;
    }

    body {
        background-color: var(--accent-3);
        color: var(--primary-dark);
    }

    .card {
        background-color: var(--white);
        border: 1px solid var(--primary-light);
        box-shadow: 0 4px 8px var(--shadow);
        border-radius: 1rem;
    }

    label {
        color: var(--primary-dark);
    }

    .form-control {
        background-color: var(--primary-light);
        border: 1px solid var(--primary-medium);
        color: var(--text-dark, #2c3e50);
        border-radius: 0.5rem;
    }

        .form-control:focus {
            border-color: var(--primary-dark);
            box-shadow: 0 0 8px var(--shadow);
        }

    .btn-primary {
        background-color: var(--primary-dark);
        border-color: var(--primary-dark);
        border-radius: 0.5rem;
    }

        .btn-primary:hover {
            background-color: var(--primary-medium);
            border-color: var(--primary-medium);
        }

    .alert-success {
        background-color: var(--accent-2);
        color: var(--primary-dark);
        border: 1px solid var(--primary-medium);
        border-radius: 0.5rem;
    }

    .text-danger {
        color: red;
    }
</style>

<h2 class="visually-hidden">Create Reservation</h2> @* Hidden, to keep page SEO-friendly *@

<!-- Header Section -->
<div class="welcome-section" style="margin-top: 50px;">
    <div class="row align-items-center">
        <div class="col-md-8">
            <h1 class="mb-2 fw-bold text-white">Plan Your Visit with Ease</h1>
            <p class="mb-2 fs-5">Reserve your spot at one of our branches and save your valuable time.</p>
            <p class="mb-0 text-white">Fill out the form below to schedule your appointment today.</p>
        </div>
        <div class="col-md-4 text-center d-none d-md-block">
            <i class="bi bi-calendar-check text-white" style="font-size: 5rem;"></i>
        </div>
    </div>
</div>


<div asp-validation-summary="All" class="text-danger"></div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @Html.Raw(TempData["SuccessMessage"])
    </div>
}

@* @if (TempData["ErrorMessage"] != null) *@
@* { *@
@*     <div class="alert alert-danger"> *@
@*         @TempData["ErrorMessage"] *@
@*     </div> *@
@* } *@

<div class="card shadow-lg p-4">
    <div class="row">
        <div class="col-md-6">
            <form asp-action="CreateReservation" method="post">
                <div class="form-group mb-3">
                    <label asp-for="BranchId">Select Branch:</label>
                    <select asp-for="BranchId" class="form-control" asp-items="@(new SelectList(ViewBag.Branches, "Id", "Name"))" required>
                        <option value="">Select Branch</option>
                    </select>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="ReservationDate">Reservation Date:</label>
                    <input asp-for="ReservationDate" class="form-control" type="datetime-local" required />
                </div>

                @if (User.FindFirst(ClaimTypes.NameIdentifier)?.Value == null)
                {
                    <div class="form-group mb-3">
                        <label asp-for="ServiceType">Service Type:</label>
                        <select asp-for="ServiceType" class="form-control" required>
                            <option value="">Select Type</option>
                            <option value="OpenAccount">Open Account</option>
                        </select>
                    </div>
                }
                else
                {
                    <div class="form-group mb-3">
                        <label asp-for="ServiceType">Service Type:</label>
                        <select asp-for="ServiceType" asp-items="@Html.GetEnumSelectList<ServiceType>()" class="form-control" required>
                            <option value="">Select Type</option>
                        </select>
                    </div>
                }

                <div class="form-group mb-4">
                    <label asp-for="Notes">Notes:</label>
                    <textarea asp-for="Notes" class="form-control"></textarea>
                </div>
                <br />
                <button type="submit" class="btn btn-primary w-100">Book Reservation</button>
            </form>
        </div>

        <div class="col-md-6">
            <div class="card border-0 shadow-sm p-3" style="background-color: var(--primary-light);">
                <h3 class=" text-center mb-3 fw-bold text-dark"">Find Your Nearest Branch</h3>
                <div id="map" style="height: 300px; width: 100%; border-radius: 10px;"></div>
            </div>
        </div>
    </div>
</div>

<script>
    var locations = @Html.Raw(Json.Serialize(ViewBag.Locations));

    function initMap() {
        var mapOptions = {
            center: { lat: 30.0444, lng: 31.2357 },
            zoom: 6
        };

        var map = new google.maps.Map(document.getElementById("map"), mapOptions);

        locations.forEach(function(location) {
            var marker = new google.maps.Marker({
                position: { lat: parseFloat(location.lat), lng: parseFloat(location.lng) },
                map: map,
                title: location.title,
                branchId: location.branchId,
                branchName: location.branchName
            });

            google.maps.event.addListener(marker, 'click', function() {
                selectedBranchId = marker.branchId;
                document.getElementById("BranchId").value = selectedBranchId;
            });
        });
    }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyALQ3AwOodSeIwxN1QdbtbHlIJpe7iobEo&callback=initMap" async defer></script>
