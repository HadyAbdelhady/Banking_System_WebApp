@using BankingSystem.DAL.Models
@model BankingSystem.PL.ViewModels.Manager.LoanDetailsViewModel

@{
    ViewData["Title"] = "Loan Details";
}

<style>
    :root {
        --primary-dark: rgb(63, 114, 175); /* new primary dark */
        --primary-medium: rgb(157, 178, 191); /* new primary medium */
        --primary-light: rgb(219, 226, 239); /* new primary light */
        --secondary-dark: rgb(63, 114, 175); /* mapped to primary-dark because no exact secondary */
        --secondary-light: rgb(219, 226, 239); /* mapped to primary-light */
        --neutral-1: rgb(157, 178, 191); /* mapped to text-light */
        --accent-1: rgb(63, 114, 175); /* mapped to primary-dark */
        --accent-2: rgb(221, 230, 237); /* primary-lightest */
        --accent-3: rgb(238, 244, 255); /* soft background you used */
        --white: #ffffff; /* stays same */
    }

    .loan-details-container {
        background: var(--accent-3);
        padding: 2rem;
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .page-header {
        color: var(--primary-dark);
        border-bottom: 2px solid var(--accent-1);
        padding-bottom: 1rem;
        margin-bottom: 2rem;
    }

    .back-btn {
        background-color: var(--primary-light);
        color: var(--white);
        border: none;
        transition: all 0.3s ease;
    }

        .back-btn:hover {
            background-color: var(--primary-medium);
            transform: translateY(-2px);
        }

    .card-header {
        background: linear-gradient(90deg, var(--primary-dark), var(--primary-medium)) !important;
        color: var(--white) !important;
        border-radius: 10px 10px 0 0 !important;
    }

    .info-card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
    }

    .info-label {
        color: var(--primary-medium);
        font-weight: 600;
    }

    .info-value {
        color: var(--primary-dark);
        font-weight: 500;
    }

    .badge-status {
        padding: 0.5rem 1rem;
        border-radius: 8px;
        font-weight: 500;
    }

    .action-badge {
        cursor: pointer;
        transition: all 0.3s ease;
        margin-left: 0.5rem;
    }

        .action-badge:hover {
            transform: scale(1.05);
        }

    .payment-table {
        background: var(--white);
        border-radius: 10px;
        overflow: hidden;
    }

        .payment-table thead {
            background: var(--primary-medium);
            color: var(--white);
        }

        .payment-table th {
            font-weight: 500;
        }

        .payment-table tr:last-child {
            font-weight: 600;
            background: var(--accent-2);
        }

    .empty-state {
        background: var(--accent-2);
        border-left: 4px solid var(--accent-1);
        color: var(--primary-dark);
    }

    .asset-card {
        border-left: 4px solid var(--accent-1);
        transition: all 0.3s ease;
    }

        .asset-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
</style>

<div class="container-fluid py-4">
    <div class="loan-details-container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="page-header">
                <i class="fas fa-file-invoice-dollar me-2"></i>Loan Details
            </h1>
            <a asp-action="GetAllLoans" class="btn back-btn">
                <i class="fas fa-chevron-left me-2"></i>Back to List
            </a>
        </div>

        <!-- Loan Information Card -->
        <div class="card info-card mb-4">
            <div class="card-header py-3">
                <h5 class="m-0"><i class="fas fa-info-circle me-2"></i>Loan Information</h5>
                <p>CustomerId: @ViewBag.CustomerId</p>

            </div>
            <div class="card-body">
                <div class="row">
                    <!-- Left Column -->
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-5 info-label">Loan Amount:</dt>
                            <dd class="col-sm-7 info-value">@Model.Loan.LoanAmount.ToString("C")</dd>

                            <dt class="col-sm-5 info-label">Current Debt:</dt>
                            <dd class="col-sm-7 info-value">@Model.Loan.CurrentDebt.ToString("C")</dd>

                            <dt class="col-sm-5 info-label">Interest Rate:</dt>
                            <dd class="col-sm-7 info-value">@Model.Loan.InterestRate%</dd>

                            <dt class="col-sm-5 info-label">Duration:</dt>
                            <dd class="col-sm-7 info-value">@Model.Loan.DurationInMonth months</dd>

                            <dt class="col-sm-5 info-label">Customer Name:</dt>
                            <dd class="col-sm-7 info-value">@Model.Loan.CustomerName</dd>
                        </dl>
                    </div>

                    <!-- Right Column -->
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-5 info-label">Status:</dt>
                            <dd class="col-sm-7">
                                <span class="badge-status @GetStatusBadgeClass(Model.Loan.LoanStatus)">
                                    @Model.Loan.LoanStatus
                                </span>
                                @if (Model.Loan.LoanStatus == LoanStatus.Pending)
                                {
                                    <a asp-action="AcceptLoan" asp-route-LoanId="@Model.Id"
                                       class="badge-status bg-success text-white action-badge">
                                        <i class="fas fa-check me-1"></i>Accept
                                    </a>
                                    <a asp-action="DenyLoan" asp-route-LoanId="@Model.Id"
                                       class="badge-status bg-danger text-white action-badge">
                                        <i class="fas fa-times me-1"></i>Deny
                                    </a>
                                }
                            </dd>

                            <dt class="col-sm-5 info-label">Type:</dt>
                            <dd class="col-sm-7 info-value">@Model.Loan.LoanType</dd>

                            <dt class="col-sm-5 info-label">Start Date:</dt>
                            <dd class="col-sm-7 info-value">@Model.Loan.StartDate.ToString("dd MMM yyyy")</dd>

                            <dt class="col-sm-5 info-label">Account Number:</dt>
                            <dd class="col-sm-7 info-value">@Model.Loan.AccountNumber</dd>
							<dt class="col-sm-5 info-label">Documents:</dt>
							<dd class="col-sm-7 info-value">
								@if (Model.FinancialDocument?.Any() == true)
								{
									<ul>
										@foreach (var document in Model.FinancialDocument)
										{
											<li>
                                                <a href="@Url.Action("DownloadDocument", "ManagerLoan", new { customerId = document.CustomerId, loanId = document.LoanId })">Download Document</a>

											</li>
										}
									</ul>
								}
								else
								{
									<span>No documents available</span>
								}
							</dd>

                        </dl>
                    </div>
                </div>
            </div>
        </div>

        <!-- Financial Overview Section -->
        @* <div class="row mb-4"> *@
        @*     <!-- Income Sources --> *@
        @*     @if (Model.FinancialDocument != null) *@
        @*     { *@
        @*         <div class="col-lg-6 mb-4"> *@
        @*             <div class="card info-card h-100"> *@
        @*                 <div class="card-header py-3"> *@
        @*                     <h5 class="m-0"><i class="fas fa-money-bill-wave me-2"></i>Income Sources</h5> *@
        @*                 </div> *@
        @*                 <div class="card-body"> *@
        @*                     <!-- Income sources content here --> *@
        @*                 </div> *@
        @*             </div> *@
        @*         </div> *@
        @*     } *@

        @*     <!-- Assets --> *@
        @*     @if (Model.Assets?.Any() == true) *@
        @*     { *@
        @*         <div class="col-lg-6 mb-4"> *@
        @*             <div class="card info-card h-100"> *@
        @*                 <div class="card-header py-3"> *@
        @*                     <h5 class="m-0"><i class="fas fa-landmark me-2"></i>Declared Assets</h5> *@
        @*                 </div> *@
        @*                 <div class="card-body"> *@
        @*                     <div class="row"> *@
        @*                         @foreach (var asset in Model.Assets) *@
        @*                         { *@
        @*                             <div class="col-md-6 mb-3"> *@
        @*                                 <div class="card asset-card h-100"> *@
        @*                                     <div class="card-body"> *@
        @*                                         <div class="d-flex align-items-center"> *@
        @*                                             <div class="me-3"> *@
        @*                                                 <i class="fas @GetAssetIcon(asset.Type) fa-2x" style="color: var(--accent-1);"></i> *@
        @*                                             </div> *@
        @*                                             <div> *@
        @*                                                 <div class="text-muted small">@asset.Type</div> *@
        @*                                                 <div class="h6 mb-0">@asset.EstimatedValue.ToString("C")</div> *@
        @*                                             </div> *@
        @*                                         </div> *@
        @*                                     </div> *@
        @*                                 </div> *@
        @*                             </div> *@
        @*                         } *@
        @*                     </div> *@
        @*                 </div> *@
        @*             </div> *@
        @*         </div> *@
        @*     } *@
        @* </div> *@

        <!-- Payment History -->
        <div class="card info-card">
            <div class="card-header py-3">
                <h5 class="m-0"><i class="fas fa-history me-2"></i>Payment History</h5>
            </div>
            <div class="card-body">
                @if (Model.Payments?.Any() == true)
                {
                    <div class="table-responsive">
                        <table class="table payment-table">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Amount</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var payment in Model.Payments)
                                {
                                    <tr>
                                        <td>@payment.PaymentDate.ToString("dd MMM yyyy")</td>
                                        <td>@payment.Amount.ToString("C")</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td><strong>Total Paid:</strong></td>
                                    <td><strong>@Model.Payments.Sum(p => p.Amount).ToString("C")</strong></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                }
                else
                {
                    <div class="alert empty-state">
                        <i class="fas fa-info-circle me-2"></i> No payment history found
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(LoanStatus status)
    {
        return status switch
        {
            LoanStatus.Accepted => "badge-success text-bg-success",
            LoanStatus.Pending => "badge-warning text-bg-primary",
            LoanStatus.Denied => "badge-danger text-bg-danger",
            LoanStatus.Paid => "badge-success text-bg-success",
            _ => "badge-secondary text-bg-danger"
        };
    }
    string GetAssetIcon(string assetType)
    {
        return assetType switch
        {
            "Property" => "fa-home",
            "Vehicle" => "fa-car",
            "Investment" => "fa-chart-line",
            _ => "fa-piggy-bank"
        };
    }
}

<style>
    dt {
        font-weight: 500;
        color: #6c757d;
    }

    .card {
        border-radius: 0.35rem;
    }

    .table th {
        border-top: none;
    }

    .badge {
        font-size: 0.85em;
        padding: 0.5em 0.75em;
    }
</style>