@using BankingSystem.DAL.Models
@model BankingSystem.PL.ViewModels.Customer.AccountsViewModel

@{
    ViewData["Title"] = "Withdraw Money";
    TransactionType IsDepositing = ViewBag.Process;
    var proecessType = IsDepositing == TransactionType.Withdraw ? "Withdraw" : "Deposit";
}

<style>
    /* Keep the same style definitions from transfer view */
    :root {
        --primary-dark: #0a2d2e;
        --primary-medium: #1c4e4f;
        --primary-light: #436e6f;
        --secondary-dark: #6a8e8f;
        --secondary-light: #879693;
        --neutral-1: #a49e97;
        --accent-1: #deae9f;
        --accent-2: #efd7cf;
        --accent-3: #f7ebe7;
        --white: #ffffff;
    }

    .transfer-container {
        background: var(--accent-3);
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        padding: 2rem;
        max-width: 600px;
        margin: 2rem auto;
    }

    .transfer-header {
        color: var(--primary-dark);
        border-bottom: 2px solid var(--accent-1);
        padding-bottom: 1rem;
        margin-bottom: 2rem;
        text-align: center;
    }

    .form-label {
        color: var(--primary-medium);
        font-weight: 600;
    }

    .form-control {
        border: 2px solid var(--secondary-light);
        border-radius: 8px;
        padding: 0.75rem 1.25rem;
        transition: all 0.3s ease;
    }

        .form-control:focus {
            border-color: var(--accent-1);
            box-shadow: 0 0 0 0.25rem rgba(222, 174, 159, 0.25);
        }

    .validation-message {
        color: var(--accent-1);
        font-size: 0.9rem;
    }

    .submit-btn {
        background-color: var(--primary-medium);
        border: none;
        padding: 0.75rem 2rem;
        font-weight: 600;
        transition: all 0.3s ease;
        width: 100%;
    }

        .submit-btn:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
        }

    .iban-hint {
        font-size: 0.85rem;
        color: var(--neutral-1);
        margin-top: 0.25rem;
    }

    .amount-input {
        position: relative;
    }

    .currency-symbol {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: var(--primary-medium);
        font-weight: 600;
    }
</style>

<div class="transfer-container">
    <h2 class="transfer-header">
        @if (IsDepositing == TransactionType.Withdraw)
        {
            <i class="fas fa-money-bill-wave me-2"></i>
            <text>Withdraw Money</text>
        }
        else
        {

            <i class="fas fa-money-bill-wave me-2"></i>
            <text>Deposit Money</text>
        }
    </h2>

    <form asp-action="@proecessType" method="post">
        @Html.AntiForgeryToken()
        <!-- Add this hidden input -->
        <input type="hidden" id="IsUsingVisa" name="IsUsingVisa" value="@(!Model.ShowAccounts).ToString().ToLower()" />

        <div asp-validation-summary="ModelOnly" class="alert alert-danger validation-message"></div>

        <!-- Account/Card Selection Toggle -->
        <div class="transfer-options mb-4 text-center">
            <button type="button" id="showAccounts" class="btn @(Model.ShowAccounts ? "btn-primary" : "btn-outline-dark")" onclick="setAccountType(true)">
                Withdraw from Account
            </button>
            <button type="button" id="showCards" class="btn @(!Model.ShowAccounts ? "btn-primary" : "btn-outline-dark")" onclick="setAccountType(false)">
                Withdraw from Card
            </button>
        </div>

        <!-- Account Selection -->
        <div id="accountSection" style="@(Model.ShowAccounts ? "display:block" : "display:none")">
            <div class="mb-3">
                <label asp-for="SelectedAccountNumber" class="form-label">From Account</label>
                <select asp-for="SelectedAccountNumber" asp-items="Model.UserAccounts" class="form-control">
                    <option value="">-- Select Account --</option>
                </select>
                <span asp-validation-for="SelectedAccountNumber" class="text-danger"></span>
            </div>
        </div>

        <!-- Card Selection -->
        <div id="cardSection" style="@(!Model.ShowAccounts ? "display:block" : "display:none")">
            <div class="mb-3">
                <label asp-for="SelectedCardNumber" class="form-label">From Card</label>
                <select asp-for="SelectedCardNumber" asp-items="Model.UserVisaCards" class="form-control">
                    <option value="">-- Select Card --</option>
                </select>
                <span asp-validation-for="SelectedCardNumber" class="text-danger"></span>
            </div>
        </div>

        <!-- Amount Input -->
        <div class="mb-4 amount-input">
            @if (IsDepositing == TransactionType.Withdraw)
            {
                <label asp-for="Amount" class="form-label">Withdrawal Amount</label>

            }
            else
            {
                <label asp-for="Amount" class="form-label">Deposit Amount</label>

            }
            <div class="position-relative">
                <span class="currency-symbol">$</span>
                <input asp-for="Amount" type="number" step="0.01" class="form-control ps-4" placeholder="0.00" />
            </div>
            <span asp-validation-for="Amount" class="validation-message"></span>
            @if (IsDepositing == TransactionType.Withdraw)
            {
                <div class="iban-hint">Service fee: $5 (included in total)</div>
            }
        </div>

        <!-- Security Details -->
        <div class="mb-4" id="cardDetailsSection" style="@(!Model.ShowAccounts ? "display:block" : "display:none")">
            <div class="row">
                <div class="col-md-6">
                    <label asp-for="VisaCVV" class="form-label">CVV</label>
                    <input asp-for="VisaCVV" class="form-control" placeholder="XXX" />
                    <span asp-validation-for="VisaCVV" class="validation-message"></span>
                </div>
            </div>
        </div>

        <!-- Submit Button -->
        <div class="mt-4 text-center">
            <button type="submit" class="btn submit-btn text-white"
                    style="width: 200px; border-radius: 25px; padding: 10px 20px; font-size: 1.1rem;">
                @if (IsDepositing == TransactionType.Withdraw)
                {
                    <i class="fas fa-coins me-2"></i>
                    <text>Process Withdrawal</text>
                }
                else
                {
                    <i class="fas fa-coins me-2"></i>
                    <text>Process Deposit</text>
                }
            </button>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
            function setAccountType(isAccount) {
            // Update the hidden input value
            $('#IsUsingVisa').val(!isAccount); // Visa is used when NOT showing accounts

            // Existing UI update logic
            if (isAccount) {
                $('#accountSection').show();
                $('#cardDetailsSection').hide();
                $('#cardSection').hide();
                $('#showAccounts').removeClass('btn-outline-dark').addClass('btn-primary');
                $('#showCards').removeClass('btn-primary').addClass('btn-outline-dark');
            } else {
                $('#accountSection').hide();
                $('#cardSection').show();
                $('#cardDetailsSection').show();
                $('#showCards').removeClass('btn-outline-dark').addClass('btn-primary');
                $('#showAccounts').removeClass('btn-primary').addClass('btn-outline-dark');
            }
        }

         $(document).ready(function() {
            // Initialize based on model value
            const isUsingVisa = $('#IsUsingVisa').val() === 'true';
            setAccountType(!isUsingVisa); // Show accounts when NOT using Visa
            });
    </script>
}